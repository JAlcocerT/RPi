version: "2.1"
services:
  syncthing:
    image: syncthing/syncthing #https://github.com/syncthing/syncthing
    container_name: syncthing
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    volumes:
      - /home/Docker/Syncthing/config:/config
      - /home/Docker/FileBrowser/data:/srv
      #- ~/user/Sync-Folder-Data:/data1
      #- /media/user/TOSHIBA\ EXT/A-SYNC-CLOUD:/data2 #You can add more than one folder, even if different disk
      #- "C:\\DOCKER\\Syncthing\\config:/config" #Example for Windows
      #- "D:\\Z_Sync:/dataD" ##Example for Windows
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped

  filebrowser:
    image: filebrowser/filebrowser #https://github.com/filebrowser/filebrowser
    container_name: filebrowser
    ports:
      - 8080:80
    volumes:
      - /home/Docker/FileBrowser/config:/config
      - /home/Docker/FileBrowser/data:/srv
    restart: unless-stopped   

  pigallery2:
    image: bpatrik/pigallery2:latest #https://github.com/bpatrik/pigallery2
    container_name: pigallery2
    environment:
      - NODE_ENV=production
    volumes:
      - "/home/Docker/pigallery/config:/app/data/config" # CHANGE ME
      - "db-data:/app/data/db"
      - "/home/Docker/FileBrowser/data:/app/data/images:ro" # CHANGE ME, ':ro' mean read-only
      - "/home/Docker/pigallery/tmp:/app/data/tmp" # CHANGE ME
    ports:
      - 81:80
    restart: "no"

volumes:
  db-data:     

#   dbphotoview:
#     image: postgres:latest #linuxserver/mariadb
#     restart: always
#     environment:
#       POSTGRES_USER: photoview #change this!!
#       POSTGRES_PASSWORD: photosecret #change this!!
#       POSTGRES_DB: photoview
#       # - MYSQL_DATABASE=photoview
#       # - MYSQL_USER=photoview
#       # - MYSQL_PASSWORD=photosecret
#       # - MYSQL_RANDOM_ROOT_PASSWORD=1
#     volumes:
#       - db_data:/var/lib/mysql

#   photoview:
#     image: viktorstrate/photoview:2
#     restart: always
#     ports:
#       - "8099:80"
#     depends_on:
#       - dbphotoview

#     environment:
#       - PHOTOVIEW_DATABASE_DRIVER=mysql
#       - PHOTOVIEW_MYSQL_URL=photoview:photosecret@tcp(db)/photoview
#       - PHOTOVIEW_LISTEN_IP=photoview
#       - PHOTOVIEW_LISTEN_PORT=80
#       - PHOTOVIEW_MEDIA_CACHE=/app/cache

#     volumes:
#       - api_cache:/app/cache
#       - /home/Docker/FileBrowser/data:/photos:ro
#       # Change This: to the directory where your photos are located on your server.
#       # If the photos are located at `/home/user/photos`, then change this value
#       # to the following: `/home/user/photos:/photos:ro`.
#       # You can mount multiple paths, if your photos are spread across multiple directories.
#       #- /home/your/path/with/files/photos:/photos:ro #it respects your file system photo organization & remember to mention /photos/whatever_path in the initial setup 


# volumes:
#   db_data:
#   api_cache: